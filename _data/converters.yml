# template
#     - name:
#       url: URL to repo
#
#       data_types:
#        - MRI, EEG, MEG, iEEG, events, physio
#       expected_input:
#       -  DICOM, PAR/REC, tsv
#       distribution:
#           - name: pypi
#             url: https://pypi.org/project/???
#           - name: dockerhub
#             url: https://hub.docker.com/r/??
#       language:
#        -  Python, MATLAB
#       documentation: URL to documentation
#       comment:
#       GUI: false

- group:
  name: MRI and PET converters
  members:
    - name: bidsify
      url: https://github.com/NILAB-UvA/bidsify
      data_types:
        - MRI
      expected_input:
        - DICOM
        - PAR/REC
      language:
         -  Python
      comment: Tool to convert source MRI datasets to BIDS-compatible datasets.
      distribution:
        - name: pypi
          url: https://pypi.org/project/bidsify
        - name: dockerhub
          url: https://hub.docker.com/r/lukassnoek/bidsify

    - name: bidskit
      url: https://github.com/jmtyszka/bidskit
      data_types:
        - MRI
      expected_input:
        - DICOM
      language:
        - Python
      comment:
        Utility functions for working with DICOM and BIDS neuroimaging data.
      documentation: https://github.com/jmtyszka/bidskit/blob/master/docs/QuickStart.md
      distribution:
        - name: pypi
          url: https://pypi.org/project/bidskit
        - name: dockerhub
          url: https://hub.docker.com/r/jmtyszka/bidskit
      license: MIT

    - name: BMAT
      url: https://github.com/ColinVDB/BMAT
      data_types:
       - MRI
      expected_input:
      -  DICOM
      distribution:
          - name: dockerhub
            url: https://hub.docker.com/r/colinvdb/bmat-dcm2niix
      language:
       -  Python
      GUI: true
      license: GPL-3.0

    - name: Data2Bids
      url: https://github.com/SIMEXP/Data2Bids
      data_types:
        - MRI
      expected_input:
        - not DICOM
      language:
        - Python
      comment: |
        Converts MRI files from extension supported by nibabel into NIfTI and
        convert them to BIDS
      distribution:
        - name: pypi
          url: https://pypi.org/project/data2bids
      license: MIT

    - name: Dcm2Bids
      url: https://github.com/cbedetti/Dcm2Bids
      data_types:
        - MRI
      expected_input:
        - DICOM
      language:
        - Python
      comment: converts DICOM files using dcm2niix into BIDS
      documentation: https://unfmontreal.github.io/Dcm2Bids/
      distribution:
        - name: pypi
          url: https://pypi.org/project/Dcm2Bids
        - name: dockerhub
          url: https://hub.docker.com/r/unfmontreal/dcm2bids
      license: GPL-3.0

    - name: HeuDiConv
      url: https://github.com/nipy/heudiconv
      data_types:
        - MRI
      expected_input:
        - DICOM
      language:
        - Python
      distribution:
        - name: pypi
          url: https://pypi.org/project/heudiconv
        - name: dockerhub
          url: https://hub.docker.com/r/nipy/heudiconv
      documentation: https://heudiconv.readthedocs.io/
      comment: |
        A flexible DICOM converter for organizing brain imaging data into
        structured directory layouts
      license: Apache 2.0

    - name: OpenfMRI2BIDS
      url: https://github.com/bids-standard/openfmri2bids
      data_types:
        - MRI # not sure
      expected_input:
      language:
      comment: Convert OpenfMRI dataset to BIDS

    - name: ReproIn
      url: https://github.com/ReproNim/reproin
      data_types:
        - MRI
      expected_input:
      language:
        - Python
      comment:
        "HeuDiConv-based turnkey solution: a setup for automatic generation of
        shareable, version-controlled BIDS datasets from MR scanners."
      distribution:
        - name: dockerhub
          url: https://hub.docker.com/r/repronim/reproin
      license: MIT

    - name: XNAT2BIDS
      url: https://github.com/kamillipi/2bids
      data_types:
        - MRI # not sure
      expected_input:
      language:
        - shell
      comment: |
        Simple xnat pipeline to convert DICOM scans to BIDS-compatible output
        (nii+json).

    - name: Horos (Osirix) export plugin
      url: https://github.com/mslw/horos-bids-output
      data_types:
      expected_input:
      language:
        - objective C
      comment: Horos plugin for BIDS output.
      GUI: yes
      license: GPL-3.0

    - name: BIDScoin
      url: https://github.com/Donders-Institute/bidscoin
      data_types:
        - MRI
        - phsyiological
        - behavioral
        - PET
      expected_input:
        - DICOM
        - PAR/REC
        - physiological
        - PET
        - Nifti
      language:
        - Python
      distribution:
        - name: pypi
          url: https://pypi.org/project/bidscoin
      documentation: https://bidscoin.readthedocs.io/en/stable/
      comment: BIDScoin converts your source-level neuroimaging data to BIDS
      GUI: yes
      license: GPL-3.0

    - name: BIDSme
      url: https://github.com/nbeliy/bidsme
      data_types:
        - MRI
        - EEG
      expected_input:
        - DICOM
        - Nifti
        - Brain Vision
      documentation: https://gitlab.uliege.be/CyclotronResearchCentre/Public/bidstools/bidsme/bidsme_example/-/tree/master/example1
      language:
         -  Python
      comment:
      license: GPL-2.0

    - name: BrkRaw
      url: https://github.com/BrkRaw/brkraw
      data_types:
        - MRI
      expected_input:
        - Bruker MRI scanner data
      language:
        - Python
      GUI: yes
      comment: For a preclinical Bruker MRI scanner
      license: GPL-3.0

    - name: Clinica
      url: https://github.com/aramis-lab/clinica
      data_types:
      expected_input:
        - ADNI
        - AIBL
        - NIFD
        - OASIS
        - OASIS-3
      language:
        - Python
      comment:
      documentation: https://aramislab.paris.inria.fr/clinica/docs/public/latest/
      license: MIT

    - name: niix2bids
      url: https://github.com/benoitberanger/niix2bids
      data_types:
      expected_input:
        - Nifti converted from DICOM using dcm2niix
      language:
        - Python
      comment: Use this package as a command line to organize your Nifti dataset into BIDS.
      license: GPL-3.0

    - name: dac2bids
      url: https://github.com/dangom/dac2bids
      data_types:
        - MRI
      expected_input:
        - DICOM
      language:
        - Python
      comment: Create a BIDS structure for a DICOM folder.

    - name: Autobids
      url: https://github.com/khanlab/autobids
      data_types:
        - MRI
      expected_input:
        - DICOM
      comment: |
        Automated Dicom to BIDS and pipelines using compute canada. From the
        Center for Functional and Metabolic Mapping (CFMM) at Westernâ€™s Robarts
        Research Institute.

    - name: PET2BIDS
      url: https://github.com/openneuropet/PET2BIDS
      comment: |
        Helps you convert your PET data! raw PET scanner files (for example ecat, dicom)
        and additional side file like excel sheets.
      data_types:
        - PET
      expected_input:
        - DICOM
        - ECAT
      language:
        - MATLAB
        - Python
      GUI: false
      license: MIT

    - name: Explore ASL
      url: https://github.com/ExploreASL/ExploreASL
      comment: |
        Convert DICOM and NIFTI data to the ASL-BIDS format.
      data_types:
        - ASL
      expected_input:
        - DICOM
        - Nifti
      documentation: https://exploreasl.github.io/Documentation/1.8.0/Tutorials-ASL-BIDS/
      language:
         -  MATLAB

    - name: SAMRI
      url: https://github.com/IBT-FMI/SAMRI
      comment: |
        Full stack Small Animal MRI data analysis package, including the `bru2bids`
        repositing pipeline, which can convert Bruker archives to the BIDS format.
        From the ETH and University of Zurich, with collaboration from MIT and
        Dartmouth College.
      data_types:
        - small-animal MRI
      expected_input:
        - Bruker ParaVision
        - NIfTI
      language:
        - Python
        - shell
      documentation: https://doi.org/10.3389/fninf.2020.00005
      GUI: false

    - name: BIDSconvertR
      url: https://github.com/bidsconvertr/bidsconvertr
      comment: |
        The BIDSconvertR R package provides a user-friendly workflow with graphical user interfaces.
        It consists of the following steps:
        (i) convert DICOM data to NIfTI data using dcm2niix
        (ii) structure this data according to the BIDS specification
        (iii) provide the papayaWidget viewer for inspecting the images
      data_types:
        - MRI
      expected_input:
        - DICOM
      language:
        - R
      documentation: https://bidsconvertr.github.io/
      GUI: true
      license: GPL-3.0

    - name: ezBIDS
      url: https://github.com/brainlife/ezbids
      data_types:
        - MRI
        - ASL
        - events
      expected_input:
        - DICOM
        - NIfTI/JSON
        - events (tsv, csv, txt, out, xlsx)
      language:
        - Vue
        - TypeScript
        - Javascript
        - Python
        - shell
      documentation: https://brainlife.io/docs/using_ezBIDS/
      comment: |
        A web-based BIDS conversion tool with four unique features:
        (1) No installation or programming requirements.
        (2) Handling of both imaging and task events data and metadata.
        (3) Semi-automated inference and guidance for adherence to BIDS.
        (4) Multiple data management options, including download BIDS data
        to local system, or transfer to OpenNeuro.org or to brainlife.io.
      GUI: true
      license: MIT

    - name: mercure-dcm2bids
      url: https://github.com/mercure-imaging/mercure-dcm2bids
      data_types:
        - MRI
      expected_input:
        - DICOM
      language:
        - Python
      documentation: https://github.com/mercure-imaging/mercure-dcm2bids
      comment: |
        A containerized app that can be used to perform BIDS conversion of 
        DICOM studies sent directly to mercure from a scanner or PACS. mercure 
        is an open-source DICOM orchestration platform that can integrate 
        containerized apps into clinical workflows. It has a graphical user 
        interface making it easy to setup and manage BIDS configurations for 
        multiple protocols. The Dcm2Bids tool is used for conversion.
      distribution:
        - name: dockerhub
          url: https://hub.docker.com/r/mercureimaging/mercure-dcm2bids 
      GUI: true
      license: GPL-3.0

